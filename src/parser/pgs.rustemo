Pgs:
    CreateType SEMICOLON ;

CreateType: 
    CreateNodeType | CreateEdgeType | CreateGraphType ;

CreateNodeType:
    CREATE NODE TYPE NodeType ;

CreateEdgeType:
    CREATE EDGE TYPE EdgeType ;

CreateGraphType:
    CREATE GRAPH TYPE GraphType ;

NodeType:
    "(" TypeName LabelPropertySpec ")" ;

EdgeType:
    EndpointType "-[" TypeName LabelPropertySpec "]->" EndpointType ;

GraphType:
    TypeName "{" "}" ;

TypeName:
    IDENTIFIER ;  

EndpointType:
    "(" LabelPropertySpec ")" ;

LabelPropertySpec:
    LabelSpec? PropertySpec? ;

LabelSpec:
    ":" IDENTIFIER ;

PropertySpec:
    OPEN_CURLY Properties CLOSE_CURLY ;

Properties:
      left=Properties "," right=Properties {EachOf, 1, left} 
    | left=Properties "|" right=Properties {OneOf, 2, left} 
    | '(' Properties ')' {Paren}
    | "OPTIONAL"? Property {BaseProperty}
    ;

Property:
    key ":" TypeSpec Card ? ;

key:
    IDENTIFIER ;

TypeSpec:
    SimpleType ;

SimpleType:    
    STRING_NAME | INTEGER_NAME | DATE_NAME ;

Card: 
    "?" {Optional} 
    | "+" {OneOrMore} 
    | "*" {ZeroOrMore}
    | "{" Number "," Max "}" {Range} ;

Max:
    Number | 
    "*" {Star};

/*endpoint_type:
    "(" label_property_spec ")" ;

label_property_spec:
     ":" label_spec "OPEN" ? property_spec ?

label_spec:
    type_name

property_spec:
    "{" "}"*/

terminals

IDENTIFIER:
    /\w+/ ;

SEMICOLON:
    ";" ;

CREATE:
    "CREATE" ;

NODE:
    "NODE" ;

EDGE:
    "EDGE" ;

GRAPH:
    "GRAPH" ;

TYPE:
    "TYPE" ;

OPEN_PAREN:
    "(" ;

CLOSE_PAREN:
    ")" ;

OPEN_ARROW:
    "-[" ;

CLOSE_ARROW:
    "]->" ;

OPEN_CURLY:
    "{" ;

CLOSE_CURLY:
    "}" ;

COLON:
    ":" ;

COMMA:
    "," ;

BAR:
    "|" ;

PLUS:
    "+" ;

STAR:
    "*" ;

QUESTION:
    "?" ;

INTEGER_NAME:
    "INTEGER" ;

STRING_NAME:
    "STRING" ;

DATE_NAME:
    "DATE" ;

Number:
    /\d+/ ;

OPTIONAL:
    "OPTIONAL" ;